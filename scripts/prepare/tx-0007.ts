// Do the listing of LBTC Mar PT, pumpBTC & eBTC Mar PT on mainnet btc
// scheduled: https://etherscan.io/tx/0x22d539b0a4e434814e666daaa575e4a3458b9198e4aa4557ee5b503dc28a3b5a
// executed: https://etherscan.io/tx/0x4e91a6218751cb44b39806256c65c207219391bb40822cedb30f73736b2d73e6

import hre from 'hardhat';
import assert from 'assert';
import { getTimelock, prepareTimelockData } from '../prepare-timelock';
import { mockExecuteTimelock } from '../mock-exec-timelock';
import { ContractTransaction } from 'ethers';

const job = async () => {
  assert(
    hre.network.name === 'mainnet' ||
      hre.network.name === 'hardhat' ||
      hre.network.name === 'tenderly',
    'not mainnet'
  );
  console.log('using network', hre.network.name);
  const timelock = await getTimelock(hre, '0x00000Ab6Ee5A6c1a7Ac819b01190B020F7c6599d');
  const safe = '0x4e88e72bd81c7ea394cb410296d99987c3a242fe';
  const pool = await hre.ethers.getContractAt('Pool', '0xCD2b31071119D7eA449a9D211AC8eBF7Ee97F987');

  const txs: ContractTransaction[] = [];

  // listing of LBTC Mar PT
  txs.push({
    to: '0x43CcF5E5F694E15Ec159bC7112c6119bac84f79e',
    data: '0x107eef4500000000000000000000000017878afdd5772f4ec93c265ac7ad8e2b29abb8570000000000000000000000000000000000000000000000000000000000000180000000000000000000000000e06aa134e8e3a207388521ed494f99811a73abaa000000000000000000000000ec5a52c685cc3ad79a6a347abace330d69e0b1ed0000000000000000000000000000000000000000000000000000000000002328000000000000000000000000000000000000000000000000000000000000251c000000000000000000000000000000000000000000000000000000000000290400000000000000000000000000000000000000000000000000000000000003e8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000b38d31b6294ef77cf5315b4304655f3a6261c501000000000000000000000000be5c82d0cf170fc1aab298f5d2a770266e5d11440000000000000000000000005a2d1f6e0fc957b7cb47324d4ba05a4724a1308500000000000000000000000000000000000000000000000000000000000000080000000000000000000000003789f77acfee511396fd97900e77450a5f1db19b000000000000000000000000ec5a52c685cc3ad79a6a347abace330d69e0b1ed0000000000000000000000004e88e72bd81c7ea394cb410296d99987c3a242fe000000000000000000000000938e23c10c501ce5d42bc516ecfdf5abd9c51d2b00000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000000225a65726f4c656e64205054204c6f6d62617264204c4254432032374d41523230323500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000137a3050542d4c4254432d32374d41523230323500000000000000000000000000000000000000000000000000000000000000000000000000000000000000002b5a65726f4c656e64207a6b205661726961626c6520446562742050542d4c4254432d32374d415232303235000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001f7661726961626c65446562747a3050542d4c4254432d32374d4152323032350000000000000000000000000000000000000000000000000000000000000000295a65726f4c656e64207a6b20537461626c6520446562742050542d4c4254432d32374d4152323032350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001d737461626c65446562747a3050542d4c4254432d32374d41523230323500000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000',
  });

  // listing of eBTC Mar PT
  txs.push({
    to: '0x43CcF5E5F694E15Ec159bC7112c6119bac84f79e',
    data: '0x107eef4500000000000000000000000017878afdd5772f4ec93c265ac7ad8e2b29abb8570000000000000000000000000000000000000000000000000000000000000180000000000000000000000000be43eccf64742c1e49a67e0e6e9c7f73710c8e6e00000000000000000000000044a7876ca99460ef3218bf08b5f52e2dbe1995660000000000000000000000000000000000000000000000000000000000002328000000000000000000000000000000000000000000000000000000000000251c000000000000000000000000000000000000000000000000000000000000290400000000000000000000000000000000000000000000000000000000000003e8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000b38d31b6294ef77cf5315b4304655f3a6261c501000000000000000000000000be5c82d0cf170fc1aab298f5d2a770266e5d11440000000000000000000000005a2d1f6e0fc957b7cb47324d4ba05a4724a1308500000000000000000000000000000000000000000000000000000000000000080000000000000000000000003789f77acfee511396fd97900e77450a5f1db19b00000000000000000000000044a7876ca99460ef3218bf08b5f52e2dbe1995660000000000000000000000004e88e72bd81c7ea394cb410296d99987c3a242fe000000000000000000000000938e23c10c501ce5d42bc516ecfdf5abd9c51d2b00000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000000000000000000000000000000003a0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000285a65726f4c656e6420505420436f726e2065746865722e666920654254432032374d41523230323500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000187a3050542d636f726e2d654254432d32374d415232303235000000000000000000000000000000000000000000000000000000000000000000000000000000305a65726f4c656e64207a6b205661726961626c6520446562742050542d636f726e2d654254432d32374d4152323032350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000247661726961626c65446562747a3050542d636f726e2d654254432d32374d41523230323500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002e5a65726f4c656e64207a6b20537461626c6520446562742050542d636f726e2d654254432d32374d4152323032350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022737461626c65446562747a3050542d636f726e2d654254432d32374d41523230323500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000',
  });

  // listing of pumpBTC
  txs.push({
    to: '0x43CcF5E5F694E15Ec159bC7112c6119bac84f79e',
    data: '0x107eef4500000000000000000000000017878afdd5772f4ec93c265ac7ad8e2b29abb8570000000000000000000000000000000000000000000000000000000000000180000000000000000000000000f4030086522a5beea4988f8ca5b36dbc97bee88c000000000000000000000000f469fbd2abcd6b9de8e169d128226c0fc90a012e0000000000000000000000000000000000000000000000000000000000001d4c0000000000000000000000000000000000000000000000000000000000001f400000000000000000000000000000000000000000000000000000000000002af80000000000000000000000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000b38d31b6294ef77cf5315b4304655f3a6261c501000000000000000000000000be5c82d0cf170fc1aab298f5d2a770266e5d11440000000000000000000000005a2d1f6e0fc957b7cb47324d4ba05a4724a1308500000000000000000000000000000000000000000000000000000000000000080000000000000000000000003789f77acfee511396fd97900e77450a5f1db19b000000000000000000000000f469fbd2abcd6b9de8e169d128226c0fc90a012e0000000000000000000000004e88e72bd81c7ea394cb410296d99987c3a242fe000000000000000000000000938e23c10c501ce5d42bc516ecfdf5abd9c51d2b00000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000340000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000000105a65726f4c656e642070756d704254430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000097a3070756d70425443000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000215a65726f4c656e64207a6b205661726961626c6520446562742070756d704254430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000157661726961626c65446562747a3070756d704254430000000000000000000000000000000000000000000000000000000000000000000000000000000000001f5a65726f4c656e64207a6b20537461626c6520446562742070756d70425443000000000000000000000000000000000000000000000000000000000000000013737461626c65446562747a3070756d704254430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000',
  });

  const tx = await prepareTimelockData(hre, safe, txs, timelock.target);
  const reservesCount = await pool.getReservesCount();

  console.log('reserves count', reservesCount.toString());
  await mockExecuteTimelock(tx.schedule, tx.execute, 86400 * 3, 'mainnet', async () => {
    const reservesCountAfter = await pool.getReservesCount();
    console.log('reserves count after', reservesCountAfter.toString());
  });
};

job();
