// list new assets onto the zksync

import hre from 'hardhat';
import assert from 'assert';
import { getTimelock, prepareTimelockData } from '../prepare-timelock';
import { mockExecuteTimelock } from '../mock-exec-timelock';
import { ContractTransaction } from 'ethers';

const job = async () => {
  assert(
    hre.network.name === 'zksync' ||
      hre.network.name === 'hardhat' ||
      hre.network.name === 'tenderly',
    'not mainnet'
  );
  console.log('using network', hre.network.name);
  const timelock = await getTimelock(hre, '0x861cC6724D0aA7Ec7a868887643e682b1c16aeeC');
  const safe = '0x1890F9204882dfa1B8f0AEaF56ae9b2ed149D18d';

  const acl = await hre.ethers.getContractAt(
    'ACLManager',
    '0x9A60cce3da06d246b492931d2943A8F574e67389'
  );

  const txs: ContractTransaction[] = [];

  // listing of usdm
  txs.push({
    data: '0x107eef450000000000000000000000004f285ea117ef0067b59853d6d16a5de8088ba25900000000000000000000000000000000000000000000000000000000000001800000000000000000000000006ab6c24f9312a6cb458761143d373a8f11573c4b000000000000000000000000a900cbe7739c96d2b153a273953620a701d5442b0000000000000000000000000000000000000000000000000000000000001b580000000000000000000000000000000000000000000000000000000000001d4c0000000000000000000000000000000000000000000000000000000000002904000000000000000000000000000000000000000000000000000000000098968000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000186a00000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000e8178ff950ea1b69a51ce961c542a4cc6cb6e38e000000000000000000000000a04222ccb20e8b6cc2a45856e7f6ef14995bbdb9000000000000000000000000a48acc9847cc1dd2cada05151c9a78ba47a305cb0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000caa502e289bfb924732f44f5e70bd08fc052aab8000000000000000000000000a900cbe7739c96d2b153a273953620a701d5442b0000000000000000000000001890f9204882dfa1b8f0aeaf56ae9b2ed149d18d00000000000000000000000054ab34ab3c723bd2674c7082aa6ffcdfd3a5bedc00000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000340000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000000265a65726f4c656e642057726170706564204d6f756e7461696e2050726f746f636f6c20555344000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077a30775553444d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001f5a65726f4c656e64207a6b205661726961626c65204465627420775553444d0000000000000000000000000000000000000000000000000000000000000000137661726961626c65446562747a30775553444d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001d5a65726f4c656e64207a6b20537461626c65204465627420775553444d0000000000000000000000000000000000000000000000000000000000000000000011737461626c65446562747a30775553444d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000',
    to: '0x35cD64fD9b22D864bD166e0fFc1474F6090209AB',
  });
  // weeth
  txs.push({
    data: '0x107eef450000000000000000000000004f285ea117ef0067b59853d6d16a5de8088ba259000000000000000000000000000000000000000000000000000000000000018000000000000000000000000032af9a0a47b332761c8c90e9ec9f53e46e852b2b000000000000000000000000c1fa6e2e8667d9be0ca938a54c7e0285e9df924a0000000000000000000000000000000000000000000000000000000000001b580000000000000000000000000000000000000000000000000000000000001d4c0000000000000000000000000000000000000000000000000000000000002904000000000000000000000000000000000000000000000000000000000098968000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000186a00000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000e8178ff950ea1b69a51ce961c542a4cc6cb6e38e000000000000000000000000a04222ccb20e8b6cc2a45856e7f6ef14995bbdb9000000000000000000000000a48acc9847cc1dd2cada05151c9a78ba47a305cb0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000caa502e289bfb924732f44f5e70bd08fc052aab8000000000000000000000000c1fa6e2e8667d9be0ca938a54c7e0285e9df924a0000000000000000000000001890f9204882dfa1b8f0aeaf56ae9b2ed149d18d00000000000000000000000054ab34ab3c723bd2674c7082aa6ffcdfd3a5bedc00000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000036000000000000000000000000000000000000000000000000000000000000000155a65726f4c656e6420577261707065642065455448000000000000000000000000000000000000000000000000000000000000000000000000000000000000077a30776545544800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001f5a65726f4c656e64207a6b205661726961626c6520446562742077654554480000000000000000000000000000000000000000000000000000000000000000137661726961626c65446562747a30776545544800000000000000000000000000000000000000000000000000000000000000000000000000000000000000001d5a65726f4c656e64207a6b20537461626c6520446562742077654554480000000000000000000000000000000000000000000000000000000000000000000011737461626c65446562747a30776545544800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000',
    to: '0x35cD64fD9b22D864bD166e0fFc1474F6090209AB',
  });
  // usn
  txs.push({
    data: '0x107eef450000000000000000000000004f285ea117ef0067b59853d6d16a5de8088ba259000000000000000000000000000000000000000000000000000000000000018000000000000000000000000075d018f04f9cb37936530f7e3a909474565a24670000000000000000000000000469d9d1de0ee58fa1153ef00836b9bbcb84c0b60000000000000000000000000000000000000000000000000000000000001b580000000000000000000000000000000000000000000000000000000000001d4c0000000000000000000000000000000000000000000000000000000000002904000000000000000000000000000000000000000000000000000000000098968000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000186a00000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000e8178ff950ea1b69a51ce961c542a4cc6cb6e38e000000000000000000000000a04222ccb20e8b6cc2a45856e7f6ef14995bbdb9000000000000000000000000a48acc9847cc1dd2cada05151c9a78ba47a305cb0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000caa502e289bfb924732f44f5e70bd08fc052aab80000000000000000000000000469d9d1de0ee58fa1153ef00836b9bbcb84c0b60000000000000000000000001890f9204882dfa1b8f0aeaf56ae9b2ed149d18d00000000000000000000000054ab34ab3c723bd2674c7082aa6ffcdfd3a5bedc00000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000036000000000000000000000000000000000000000000000000000000000000000125a65726f4c656e642055534e20546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000057a3055534e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001d5a65726f4c656e64207a6b205661726961626c6520446562742055534e00000000000000000000000000000000000000000000000000000000000000000000117661726961626c65446562747a3055534e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b5a65726f4c656e64207a6b20537461626c6520446562742055534e0000000000000000000000000000000000000000000000000000000000000000000000000f737461626c65446562747a3055534e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000',
    to: '0x35cD64fD9b22D864bD166e0fFc1474F6090209AB',
  });
  // usn
  txs.push(
    await acl.addPoolAdmin.populateTransaction('0x1890F9204882dfa1B8f0AEaF56ae9b2ed149D18d')
  );

  const tx = await prepareTimelockData(hre, safe, txs, timelock.target);
  // const reservesCount = await pool.getReservesCount();
  // console.log('reserves count', reservesCount.toString());
  await mockExecuteTimelock(tx.schedule, tx.execute, 86400 * 5, 'zksync', async () => {
    // const reservesCountAfter = await pool.getReservesCount();
    // console.log('reserves count after', reservesCountAfter.toString());
  });
};

job();
